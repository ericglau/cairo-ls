{
	"name": "cairo-ls",
	"displayName": "Cairo language support for StarkNet",
	"description": "Cairo 0.x language support in VS Code",
	"author": "Eric Lau",
	"license": "EPL-2.0",
	"version": "0.0.28",
	"preview": true,
	"icon": "images/logo.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/ericglau/cairo-ls"
	},
	"publisher": "ericglau",
	"categories": [
		"Programming Languages",
		"Snippets",
		"Other"
	],
	"keywords": [
		"cairo",
		"starknet",
		"blockchain"
	],
	"engines": {
		"vscode": "^1.43.0"
	},
	"activationEvents": [
		"workspaceContains:**/*.cairo",
		"onCommand:cairo.compile",
		"onCommand:cairo.run",
		"onCommand:cairo.run.layout.small",
		"onCommand:cairo.compile.starknet"
	],
	"main": "./client/out/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Cairo LS",
			"properties": {
				"cairols.highlightingCompiler": {
					"scope": "resource",
					"type": "string",
					"enum": [
						"autodetect",
						"cairo",
						"starknet"
					],
					"default": "autodetect",
					"description": "Specifies which compiler to use for diagnostic highlighting."
				},
				"cairols.sourceDir": {
					"scope": "resource",
					"type": "string",
					"description": "The contracts source directory within your project, for example: src"
				},
				"cairols.disableHintValidation": {
					"scope": "resource",
					"type": "string",
					"description": "Disables hint validation for files that match the given pattern, for example: tests/**/*.cairo"
				},
				"cairols.useVenv": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Whether to use a Python virtual environment for running the Cairo/StarkNet compiler. Note: Nile's venv takes precedence over this option."
				},
				"cairols.venvCommand": {
					"scope": "resource",
					"type": "string",
					"default": ". ~/cairo_venv/bin/activate",
					"description": "If useVenv is true, this is the command used by the extension to source the virtual environment before running Cairo/StarkNet commands. Note: Nile's venv takes precedence over this option."
				},
				"cairols.nileUseVenv": {
					"scope": "resource",
					"type": "boolean",
					"default": true,
					"description": "Whether to use a Python virtual environment for running Nile."
				},
				"cairols.nileVenvCommand": {
					"scope": "resource",
					"type": "string",
					"default": ". env/bin/activate",
					"description": "If nileUseVenv is true, this is the command used by the extension to source the virtual environment before running Nile commands."
				},
				"cairols.cairoPath": {
					"scope": "resource",
					"type": "array",
					"default": [],
					"description": "Additional locations to search for cairo files."
				}
			}
		},
		"menus": {
			"explorer/context": [
				{
					"command": "nile.compile"
				},
				{
					"command": "nile.compile.all"
				},
				{
					"command": "nile.clean"
				},
				{
					"command": "pytest"
				}
			],
			"editor/context": [
				{
					"command": "nile.compile"
				},
				{
					"command": "nile.compile.all"
				},
				{
					"command": "nile.clean"
				},
				{
					"command": "pytest"
				}
			]
		},
		"commands": [
			{
				"command": "nile.compile",
				"category": "StarkNet Cairo language support",
				"title": "Nile - Compile this contract"
			},
			{
				"command": "nile.compile.all",
				"category": "StarkNet Cairo language support",
				"title": "Nile - Compile all"
			},
			{
				"command": "nile.clean",
				"category": "StarkNet Cairo language support",
				"title": "Nile - Clean"
			},
			{
				"command": "pytest",
				"category": "StarkNet Cairo language support",
				"title": "Run tests with pytest"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test": "sh ./scripts/e2e.sh"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.20.28",
		"@typescript-eslint/parser": "^2.3.0",
		"ansi-regex": ">=5.0.1",
		"esbuild": "^0.15.5",
		"eslint": "^7.32.0",
		"mocha": "^9.1.2",
		"typescript": "^3.9.10"
	}
}
